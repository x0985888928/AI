@* Views/Home/Index.cshtml *@
@{
    ViewData["Title"] = "主頁";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <!-- 照片 + 姓名 + GitHub -->
    <div class="col-md-6 mb-4">
        <div class="card h-100">
            <div class="card-header" data-i18n="photo"></div>
            <div class="card-body text-center">
                <img src="~/img/avatar.jpg" width="500" height="500" class="img-fluid mx-auto" />
                <div class="mt-3 display-6" data-i18n="name"></div>
                <h6 class="text-info">
                    <a href="https://github.com/x0985888928"
                       target="_blank"
                       class="text-info text-decoration-none"
                       data-i18n="github"></a>
                </h6>
            </div>
        </div>
    </div>

    <!-- 自評能力圖 -->
    <div class="col-lg-4 mb-4">
        <div class="card h-100">
            <div class="card-header" data-i18n="selfEval"></div>
            <div class="card-body text-center">
                <canvas id="abilityRadar" height="10"></canvas>
            </div>
        </div>
    </div>

    <!-- 最高同時處理專案 -->
    <div class="col-md-6 mb-4">
        <div class="card">
            <div class="card-header" data-i18n="maxProjects"></div>
            <div class="card-body">
                <span class="display-6">
                    <span class="count" data-target="5">0</span> <span data-i18n="unitItems"></span>
                </span>
            </div>
        </div>
    </div>

    <!-- 最高同時責任系統 -->
    <div class="col-md-6 mb-4">
        <div class="card">
            <div class="card-header" data-i18n="maxSystems"></div>
            <div class="card-body">
                <span class="display-6">
                    <span class="count" data-target="28">0</span> <span data-i18n="unitItems"></span>
                </span>
            </div>
        </div>
    </div>

    <!-- 工作經驗 -->
    <div class="col-md-6 mb-4">
        <div class="card">
            <div class="card-header" data-i18n="experience"></div>
            <div class="card-body">
                <span class="display-6">
                    <span class="count" data-target="4">0.0</span> <span data-i18n="unitYears"></span>
                </span>
            </div>
        </div>
    </div>

    <!-- 年齡 -->
    <div class="col-md-6 mb-4">
        <div class="card">
            <div class="card-header" data-i18n="age"></div>
            <div class="card-body">
                <span class="display-6">
                    <span class="count" data-target="29">0</span> <span data-i18n="unitAge"></span>
                </span>
            </div>
        </div>
    </div>

    <div class="row mt-4">
        <!-- 系統健康度 Gauge -->
        <div class="col-md-6 mb-4">
  <div class="card">
    <div class="card-header" data-i18n="systemHealth">系統健康度</div>
    <div class="card-body text-center">
      <canvas id="systemHealthPie" width="200" height="200"></canvas>
    </div>
  </div>
</div>

        <!-- 即時訪客數 Line Chart -->
        <div class="col-md-6 mb-4">
            <div class="card">
                <div class="card-header" data-i18n="visitorCount">即時訪客數</div>
                <div class="card-body">
                    <canvas id="visitorLineChart" width="200" height="200"></canvas>
                </div>
            </div>
        </div>
    </div>

</div>

@section Scripts {
    <script>
        // 雷達圖 (保持原設定)
        const ctx = document.getElementById('abilityRadar').getContext('2d');
        new Chart(ctx, {
            type: 'radar',
            data: {
                labels: ['學習能力','溝通協調','合作與效率','責任與管理','問題解決','技術執行力'],
                datasets: [{
                    data: [80, 50, 80, 40, 80, 60],
                    fill: true,
                    backgroundColor: 'rgba(0,188,212,0.2)',
                    borderColor: 'rgba(0,188,212,1)',
                    pointBackgroundColor: 'rgba(0,188,212,1)'
                }]
            },
            options: {
                scales: {
                    r: {
                        beginAtZero: true,
                        max: 100,
                        grid: { color: '#3a3a4e' },
                        angleLines: { color: '#3a3a4e' },
                        pointLabels: { color: '#cfd8dc', font: { size: 20 } },
                        ticks: { stepSize: 20, display: false }
                    }
                },
                plugins: { legend: { display: false } }
            }
        });

        // 卡片數值跳動動畫
        document.addEventListener('DOMContentLoaded', () => {
            const counters = document.querySelectorAll('.count');
            counters.forEach(counter => {
                const target = parseFloat(counter.getAttribute('data-target'));
                const duration = 2000;
                const frameRate = 60;
                const totalFrames = Math.round(duration / (1000 / frameRate));
                const increment = target / totalFrames;
                let frame = 0;
                const update = () => {
                    frame++;
                    const value = increment * frame;
                    if (frame < totalFrames) {
                        counter.innerText = Number.isInteger(target)
                            ? Math.round(value)
                            : value.toFixed(1);
                        requestAnimationFrame(update);
                    } else {
                        counter.innerText = Number.isInteger(target)
                            ? target
                            : target.toFixed(1);
                    }
                };
                requestAnimationFrame(update);
            });
        });


                document.addEventListener('DOMContentLoaded', () => {
        const ctx = document.getElementById('systemHealthPie').getContext('2d');

        // 中心文字插件
        const centerText = {
          id: 'centerText',
          beforeDraw(chart) {
            const {ctx, chartArea: {width, height}} = chart;
            ctx.save();
            const fontSize = (height / 100).toFixed(2);
            ctx.font = fontSize + "em sans-serif";
            ctx.textBaseline = "middle";
            const val = chart.data.datasets[0].data[0];
            const text = val + "%";
            const textX = (width - ctx.measureText(text).width) / 2;
            const textY = height / 2;
            ctx.fillStyle = "#ffffff";
            ctx.fillText(text, textX, textY);
            ctx.restore();
          }
        };

        // 用 Pie 完整圆盘
        const pie = new Chart(ctx, {
          type: 'pie',
          data: {
            datasets: [{
              data: [0, 100],
              backgroundColor: ['#00BCD4', '#2f2f3f'],
              borderWidth: 0
            }]
          },
          options: {
            responsive: false,
            rotation: -Math.PI / 2,    // 从顶部开始
            plugins: {
              tooltip: { enabled: false },
              legend:  { display: false },
              centerText: {}
            }
          },
          plugins: [centerText]
        });

        function updatePie() {
          // 模拟健康度值，真实可替换
          const val = Math.floor(Math.random() * 25);
          pie.data.datasets[0].data = [val, 100 - val];

          // 可选：根据 val 动态改变主色
          let color = '#f44336'; // 红
          if (val > 75) color = '#4caf50';      // 绿
          else if (val > 50) color = '#ffeb3b'; // 黄
          pie.data.datasets[0].backgroundColor[0] = color;

          pie.update();
        }

        updatePie();
        setInterval(updatePie, 5000);

        // ———— Line Chart: 記錄這頁面停留秒數變化 ————
          const lineCtx = document.getElementById('visitorLineChart').getContext('2d');
          const line = new Chart(lineCtx, {
            type: 'line',
            data: {
              labels: Array(10).fill(''),
              datasets: [{
                data: Array(10).fill(0),
                fill: false,
                tension: 0.4,
                borderColor: 'rgba(0,188,212,1)',
                pointRadius: 0
              }]
            },
            options: {
              responsive: false,
              plugins: { legend: { display: false } },
              scales: {
                x: { display: false },
                y: { beginAtZero: true, max: 10, ticks: { stepSize: 1 } }
              }
            }
          });

          let seconds = 0;
          function updateLine() {
            seconds++;
            line.data.datasets[0].data.push(seconds);
            line.data.datasets[0].data.shift();
            line.update();
          }
          setInterval(updateLine, 1000);
        });
    </script>
}
